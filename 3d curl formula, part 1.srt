1
00:00:00,355 --> 00:00:01,355
- [Voiceover] So I've
spent a couple videos

2
00:00:01,355 --> 00:00:03,574
laying down the foundation
for what three-dimensional

3
00:00:03,574 --> 00:00:05,308
curl is trying to represent, and here

4
00:00:05,308 --> 00:00:07,010
I'm going to go ahead and talk about

5
00:00:07,010 --> 00:00:08,492
how you actually compute it.

6
00:00:08,492 --> 00:00:11,199
Three-d curl is the kind
of thing that you take

7
00:00:11,199 --> 00:00:13,594
with regards to a
three-dimensional vector field.

8
00:00:13,594 --> 00:00:15,646
So something that takes in
a three-dimensional point

9
00:00:15,646 --> 00:00:17,999
as its input, and then
it's going to output

10
00:00:17,999 --> 00:00:19,794
a three-dimensional vector.

11
00:00:19,794 --> 00:00:24,352
It's common to write the component
functions as P, Q, and R.

12
00:00:24,352 --> 00:00:26,426
Each one of these is a
scale or valued function

13
00:00:26,426 --> 00:00:28,527
that takes in a three-dimensional point,

14
00:00:28,527 --> 00:00:30,265
and just outputs a number.

15
00:00:30,265 --> 00:00:31,711
So, it'll be that same three-d point

16
00:00:31,711 --> 00:00:34,461
with the coordinates x, y, and z.

17
00:00:38,025 --> 00:00:40,242
So when you have a three-dimensional
vector field like this,

18
00:00:40,242 --> 00:00:41,657
the image you might have in mind would be

19
00:00:41,657 --> 00:00:44,824
something like this, where every point

20
00:00:45,817 --> 00:00:49,123
in three-dimensional space
has a vector attached to it.

21
00:00:49,123 --> 00:00:50,671
And you know, when you
actually look at it,

22
00:00:50,671 --> 00:00:52,999
there's quite a lot going
on, but in principle,

23
00:00:52,999 --> 00:00:55,730
all that's really happening
is that each point in space

24
00:00:55,730 --> 00:00:57,757
is associated with a vector.

25
00:00:57,757 --> 00:00:59,140
The point in space is the input

26
00:00:59,140 --> 00:01:00,662
and the vector is the output.

27
00:01:00,662 --> 00:01:03,107
You're just gluing them together.

28
00:01:03,107 --> 00:01:05,613
Naturally, between the three
dimensions of the input

29
00:01:05,613 --> 00:01:06,705
and the three dimensions of the output,

30
00:01:06,705 --> 00:01:08,634
we have six dimensions going on,

31
00:01:08,634 --> 00:01:11,915
the picture that you're
looking at becomes quite messy.

32
00:01:11,915 --> 00:01:15,763
So, the question is, how do
you compute this curl value

33
00:01:15,763 --> 00:01:17,417
that I've been talking about.

34
00:01:17,417 --> 00:01:20,806
Curl of your vector value function.

35
00:01:20,806 --> 00:01:23,515
Just as a quick reminder,
what this is supposed to be,

36
00:01:23,515 --> 00:01:25,648
is you're going to have
some kind of fluid flow

37
00:01:25,648 --> 00:01:28,732
induced by this vector
field, where you're imagining

38
00:01:28,732 --> 00:01:30,651
air flowing along each vector.

39
00:01:30,651 --> 00:01:32,241
What you want is a function that tells you

40
00:01:32,241 --> 00:01:34,835
at any given point, what is the rotation

41
00:01:34,835 --> 00:01:37,821
induced by that fluid
flow around that point.

42
00:01:37,821 --> 00:01:39,525
Because rotation is described

43
00:01:39,525 --> 00:01:41,242
with a three-dimensional vector,

44
00:01:41,242 --> 00:01:43,619
you're expecting this to be vector-valued.

45
00:01:43,619 --> 00:01:46,253
It'll be something that
equals a vector output.

46
00:01:46,253 --> 00:01:49,344
If that doesn't make sense,
if that doesn't quite jive,

47
00:01:49,344 --> 00:01:51,153
maybe go check out the
video on how to represent

48
00:01:51,153 --> 00:01:53,798
three-dimensional rotation with a vector.

49
00:01:53,798 --> 00:01:55,237
So what you have here
is going to be something

50
00:01:55,237 --> 00:01:57,798
that takes as its input, x, y, and z.

51
00:01:57,798 --> 00:01:59,489
It takes a three-dimensional point,

52
00:01:59,489 --> 00:02:02,415
and what it outputs is a
vector describing rotation,

53
00:02:02,415 --> 00:02:03,764
and there's actually another notation

54
00:02:03,764 --> 00:02:06,854
that's quite, quite helpful
when it comes to computing this.

55
00:02:06,854 --> 00:02:08,932
You take nabla, that
upside-down triangle we used

56
00:02:08,932 --> 00:02:11,132
in divergence and
gradient, and you imagine

57
00:02:11,132 --> 00:02:15,955
taking the cross-product
between that and your vector V.

58
00:02:15,955 --> 00:02:17,955
As a reminder, this nabla, you imagine it

59
00:02:17,955 --> 00:02:19,937
as if it's a vector containing

60
00:02:19,937 --> 00:02:21,858
partial differential operators.

61
00:02:21,858 --> 00:02:23,605
That's the kind of thing where,
when you say it out loud,

62
00:02:23,605 --> 00:02:25,187
it sounds kinda fancy, a vector full

63
00:02:25,187 --> 00:02:26,901
of partial differential operators,

64
00:02:26,901 --> 00:02:28,322
but all it really means is

65
00:02:28,322 --> 00:02:30,702
I'm just going to write
a bunch of symbols.

66
00:02:30,702 --> 00:02:33,144
This partial partial x
is something that wants

67
00:02:33,144 --> 00:02:35,618
to take in a multi-variable function,

68
00:02:35,618 --> 00:02:39,424
and tell you its partial derivative.

69
00:02:39,424 --> 00:02:41,187
Strictly speaking, this
doesn't really make sense,

70
00:02:41,187 --> 00:02:42,435
like, hey, how can a vector contain

71
00:02:42,435 --> 00:02:44,248
these partial differential operators?

72
00:02:44,248 --> 00:02:46,415
But as a series of symbolic movements,

73
00:02:46,415 --> 00:02:47,783
it's actually quite helpful,

74
00:02:47,783 --> 00:02:51,000
because when you're multiplying
these guys by a thing,

75
00:02:51,000 --> 00:02:52,597
it's not really multiplication.

76
00:02:52,597 --> 00:02:53,506
You're really going to be giving it

77
00:02:53,506 --> 00:02:56,736
some kind of multi-variable
function, like P, Q, or R,

78
00:02:56,736 --> 00:02:58,702
the component functions
of our vector field,

79
00:02:58,702 --> 00:03:01,031
and evaluating it.

80
00:03:01,031 --> 00:03:02,787
So just as a warm-up for how to do this,

81
00:03:02,787 --> 00:03:04,104
let's see what this looks like in the case

82
00:03:04,104 --> 00:03:06,719
of two dimensions, where
we already know the formula

83
00:03:06,719 --> 00:03:08,767
for two-dimensional curl.

84
00:03:08,767 --> 00:03:11,414
What that would look like,
is you have a smaller,

85
00:03:11,414 --> 00:03:14,392
more two-dimensional,
just partial partial x,

86
00:03:14,392 --> 00:03:17,059
partial partial y, del operator.

87
00:03:19,176 --> 00:03:20,934
You're going to take the
cross-product between that

88
00:03:20,934 --> 00:03:22,489
and a two-dimensional vector

89
00:03:22,489 --> 00:03:25,518
that's just the component
functions P and Q.

90
00:03:25,518 --> 00:03:29,417
In this case, P and Q would
be just functions of x and y.

91
00:03:29,417 --> 00:03:31,150
So I'm kind of overloading notation right,

92
00:03:31,150 --> 00:03:33,410
over here I have a
two-dimensional vector field

93
00:03:33,410 --> 00:03:35,270
that I'm saying, P and y
are scale or value functions

94
00:03:35,270 --> 00:03:36,702
with a two-dimensional
input, but over here

95
00:03:36,702 --> 00:03:39,071
I'm also using P and Q to represent ones

96
00:03:39,071 --> 00:03:41,001
with a three-dimensional input.

97
00:03:41,001 --> 00:03:42,400
So you should think of these as separate,

98
00:03:42,400 --> 00:03:44,295
but it's common to use the same names.

99
00:03:44,295 --> 00:03:45,825
This is going to illustrate

100
00:03:45,825 --> 00:03:48,602
the broader, more complicated point.

101
00:03:48,602 --> 00:03:51,783
When you compute something
like this, the cross-product,

102
00:03:51,783 --> 00:03:52,969
you typically think of it as taking

103
00:03:52,969 --> 00:03:55,600
these diagonal components
and multiplying them,

104
00:03:55,600 --> 00:03:58,085
so that would be your partial partial x,

105
00:03:58,085 --> 00:04:01,267
"multiplied" with Q, which
really means you're taking

106
00:04:01,267 --> 00:04:04,017
the partial derivative
of Q with respect to x.

107
00:04:04,017 --> 00:04:08,184
Then you subtract off this
diagonal component here,

108
00:04:10,750 --> 00:04:11,682
oh sorry, this should be a y.

109
00:04:11,682 --> 00:04:13,802
This should be partial partial y.

110
00:04:13,802 --> 00:04:14,635
Sorry about that.

111
00:04:14,635 --> 00:04:16,315
You need partial partial y of P,

112
00:04:16,315 --> 00:04:18,021
and that's what you're subtracting off.

113
00:04:18,021 --> 00:04:21,555
So partial partial y of P,
just the partial derivative

114
00:04:21,555 --> 00:04:24,265
of that P function with respect to y.

115
00:04:24,265 --> 00:04:25,640
Hopefully this is something you recognize.

116
00:04:25,640 --> 00:04:28,265
This is the two-dimensional curl.

117
00:04:28,265 --> 00:04:29,790
It's something we got an intuition for,

118
00:04:29,790 --> 00:04:32,082
I want it to be more than just a formula,

119
00:04:32,082 --> 00:04:33,366
but hopefully this is kind of reassuring

120
00:04:33,366 --> 00:04:36,899
that when you take that del
operator, that nabla symbol,

121
00:04:36,899 --> 00:04:40,199
and cross-product with the
vector valued function itself,

122
00:04:40,199 --> 00:04:41,767
it gives you a sense of curl.

123
00:04:41,767 --> 00:04:44,274
Now when we do this in the
three-dimensional case,

124
00:04:44,274 --> 00:04:46,099
we're going to take a
three-dimensional cross-product

125
00:04:46,099 --> 00:04:48,922
between this three-dimensional
vectorish thing

126
00:04:48,922 --> 00:04:52,091
and this three-dimensional function.

127
00:04:52,091 --> 00:04:54,239
If you're not terribly comfortable
with the cross-product,

128
00:04:54,239 --> 00:04:56,225
how to compute it or how to interpret it

129
00:04:56,225 --> 00:04:57,466
and things like that,

130
00:04:57,466 --> 00:04:59,336
now would probably be a good
time to go find the videos

131
00:04:59,336 --> 00:05:02,345
that Sal does on this and
build up that intuition

132
00:05:02,345 --> 00:05:06,199
for what a cross-product actually
is and how to compute it.

133
00:05:06,199 --> 00:05:08,665
Because at this point, I'm
going to assume that you

134
00:05:08,665 --> 00:05:11,157
know how to compute it
because we're doing it in

135
00:05:11,157 --> 00:05:14,332
kind of an absurd context of
partial differential operators

136
00:05:14,332 --> 00:05:17,681
and functions, so it's important
to have that foundation.

137
00:05:17,681 --> 00:05:19,205
The way you compute a thing like this,

138
00:05:19,205 --> 00:05:21,406
is you construct a determinant.

139
00:05:21,406 --> 00:05:23,733
I'm going to go down here.

140
00:05:23,733 --> 00:05:26,733
Determinant of a certain 3x3 matrix.

141
00:05:29,898 --> 00:05:33,424
The top row of that is
all of the unit vectors

142
00:05:33,424 --> 00:05:35,966
in various directions of
three-dimensional space.

143
00:05:35,966 --> 00:05:39,094
So these I, J, and K guys,
I represents the unit vector

144
00:05:39,094 --> 00:05:43,744
in the x direction, so that
would be I is equal to,

145
00:05:43,744 --> 00:05:47,432
x component is one but then
the other components are zero.

146
00:05:47,432 --> 00:05:50,059
Then similarly, J and K
represent the unit vectors

147
00:05:50,059 --> 00:05:52,342
in the y and z direction, and again,

148
00:05:52,342 --> 00:05:54,200
if that doesn't quite make sense,

149
00:05:54,200 --> 00:05:56,257
why I'm putting them up there
or what we're about to do,

150
00:05:56,257 --> 00:05:58,625
maybe check out that cross-product video.

151
00:05:58,625 --> 00:06:00,460
So we put those in the
top rows as vectors.

152
00:06:00,460 --> 00:06:02,858
This is the trick to
computing the cross-product,

153
00:06:02,858 --> 00:06:05,173
because again, what does
it mean to put a vector

154
00:06:05,173 --> 00:06:09,094
inside a matrix, but
it's a notational trick.

155
00:06:09,094 --> 00:06:10,791
Then we're going to take the first vector

156
00:06:10,791 --> 00:06:12,393
that we're doing the cross-product with,

157
00:06:12,393 --> 00:06:15,700
and put its components in the next row.

158
00:06:15,700 --> 00:06:18,765
What that would look like,
is the next row has a

159
00:06:18,765 --> 00:06:20,265
partial partial y,

160
00:06:23,243 --> 00:06:25,324
no sorry, God I keep messing up here,

161
00:06:25,324 --> 00:06:28,181
that's an x, you do whatever
the first component is first,

162
00:06:28,181 --> 00:06:30,266
and then the second component second,

163
00:06:30,266 --> 00:06:33,925
and the third component, the z, partial z.

164
00:06:33,925 --> 00:06:36,937
Don't know why I'm making
that little mistake.

165
00:06:36,937 --> 00:06:39,750
For the last row, you
put in the second vector,

166
00:06:39,750 --> 00:06:43,917
which is in this case, is vector
value function P, Q, and R.

167
00:06:44,897 --> 00:06:48,897
P, which is a multi-variable
function, Q, and R.

168
00:06:50,495 --> 00:06:53,251
First, it's worth stepping
back and looking at this.

169
00:06:53,251 --> 00:06:55,305
This is kind of an absurd thing.

170
00:06:55,305 --> 00:06:56,979
Usually when we talk about matrices

171
00:06:56,979 --> 00:06:58,188
and taking the determinant,

172
00:06:58,188 --> 00:06:59,605
all of the components are numbers

173
00:06:59,605 --> 00:07:01,756
because you're multiplying
numbers together.

174
00:07:01,756 --> 00:07:04,025
But here, we've got a
notational trick layered

175
00:07:04,025 --> 00:07:06,956
on top of a notational trick,
so that one of the rows

176
00:07:06,956 --> 00:07:08,705
is vectors, one of the rows

177
00:07:08,705 --> 00:07:10,852
is partial differential operators,

178
00:07:10,852 --> 00:07:11,805
and then the last one,

179
00:07:11,805 --> 00:07:14,156
each one of these is a
multi-variable function.

180
00:07:14,156 --> 00:07:16,609
So it seems like this absurd, convoluted,

181
00:07:16,609 --> 00:07:19,090
as far away from a matrix
full of numbers thing

182
00:07:19,090 --> 00:07:21,439
as you can get, but it's actually

183
00:07:21,439 --> 00:07:23,522
very helpful for computation.

184
00:07:23,522 --> 00:07:25,974
If you go through the process
of computing this determinant

185
00:07:25,974 --> 00:07:27,722
and saying, what could that mean,

186
00:07:27,722 --> 00:07:30,062
the thing that pops out
is going to be the formula

187
00:07:30,062 --> 00:07:31,698
for three-dimensional curl.

188
00:07:31,698 --> 00:07:33,910
At the risk of having a
video that runs too long,

189
00:07:33,910 --> 00:07:35,422
I'll call things and end here,

190
00:07:35,422 --> 00:07:39,589
but continue going through that
operation in the next video.

